package com.Application.robotlegs.controller.service.sql.init {
	import com.Application.EventMain;
	import com.common.Constants;
	import com.probertson.data.SQLRunner;
	
	import flash.filesystem.File;
	import flash.filesystem.FileMode;
	import flash.filesystem.FileStream;
	
	import org.robotlegs.starling.mvcs.Command;
	
	public class CommandConfigureSql extends Command {
				
		//--------------------------------------------------------------------------------------------------------- 
		// 
		//  PUBLIC & INTERNAL VARIABLES 
		// 
		//---------------------------------------------------------------------------------------------------------
		
		
		//--------------------------------------------------------------------------------------------------------- 
		//
		// PRIVATE & PROTECTED VARIABLES
		//
		//---------------------------------------------------------------------------------------------------------
		
		//--------------------------------------------------------------------------------------------------------- 
		//
		//  CONSTRUCTOR 
		// 
		//---------------------------------------------------------------------------------------------------------
		public function CommandConfigureSql() {
			super();
		}
		//--------------------------------------------------------------------------------------------------------- 
		// 
		//  PUBLIC & INTERNAL METHODS 
		// 
		//---------------------------------------------------------------------------------------------------------
		override public function execute():void {			
						
			var dbFile:File = File.applicationStorageDirectory.resolvePath(Constants.DB_FILE_NAME);									
			
			var sqlRunner:SQLRunner = new SQLRunner(dbFile);				
				injector.mapValue(SQLRunner, sqlRunner);				
				
			if (dbFile.exists){
				dispatch(new EventMain(EventMain.CONFIGURE_MODEL));
			} else {			
				var fileStream:FileStream = new FileStream();
					fileStream.open(dbFile, FileMode.WRITE);				
					fileStream.close();
					fileStream = null;
					
				dispatch(new EventMain(EventMain.CONFIGURE_DATABASE));
			}			
		}		
		//--------------------------------------------------------------------------------------------------------- 
		// 
		//  GETTERS & SETTERS   
		// 
		//---------------------------------------------------------------------------------------------------------
		
		
		//--------------------------------------------------------------------------------------------------------- 
		//
		// PRIVATE & PROTECTED METHODS 
		//
		//---------------------------------------------------------------------------------------------------------
		
		//--------------------------------------------------------------------------------------------------------- 
		// 
		//  EVENT HANDLERS  
		// 
		//---------------------------------------------------------------------------------------------------------
		
		//--------------------------------------------------------------------------------------------------------- 
		// 
		//  HELPERS  
		// 
		//--------------------------------------------------------------------------------------------------------- 
		
		
		//--------------------------------------------------------------------------------------------------------- 
		// 
		//  END CLASS  
		// 
		//--------------------------------------------------------------------------------------------------------- 
	}
}